/*! lively.vm-v0.1.0 2014-12-19 */

var isCommonJS="undefined"!=typeof module&&module.require,Global="undefined"!=typeof window?window:global,lang="undefined"!=typeof lively?lively.lang:isCommonJS?module.require("lively.lang"):{},ast="undefined"!=typeof lively&&lively.ast?lively.ast:isCommonJS?module.require("lively.ast"):function(){throw new Error("Cannot find lively.lang")}(),lv=Global.lively||{};lv.ast=ast,lv.lang=lang;var env={isCommonJS:isCommonJS,Global:Global,lively:lv};lang.obj.extend(isCommonJS?module.exports:Global,env);var exports="undefined"!=typeof module&&module.require?module.exports:lively.vm={},lang="undefined"!=typeof module&&module.require?module.require("lively.lang"):lively.lang,ast="undefined"!=typeof module&&module.require?module.require("lively.ast"):lively.ast,arr=lang.arr;lang.obj.extend(exports,{transformForVarRecord:function(a,b,c,d,e){d=d||[];var f=lang.arr.withoutAll(Object.keys(b),d),g=ast.transform.replaceTopLevelVarDeclAndUsageForCapturing(a,{name:c,type:"Identifier"},{ignoreUndeclaredExcept:f,exclude:d,recordDefRanges:!!e});return a=g.source,e&&lang.obj.extend(e,g.defRanges),a},transformSingleExpression:function(a){try{var b=ast.fuzzyParse(a);1!==b.body.length||"FunctionDeclaration"!==b.body[0].type&&"BlockStatement"!==b.body[0].type||(a="("+a.replace(/;\s*$/,"")+")")}catch(c){lively.Config&&lively.Config.showImprovedJavaScriptEvalErrors?$world.logError(c):console.error("Eval preprocess error: %s",c.stack||c)}return a},evalCodeTransform:function(a,b){var c=exports,d=b.topLevelVarRecorder,e=b.varRecorderName||"__lvVarRecorder";return d&&(a=c.transformForVarRecord(a,d,e,b.dontTransform,b.topLevelDefRangeRecorder)),a=c.transformSingleExpression(a),b.sourceURL&&(a+="\n//# sourceURL="+b.sourceURL.replace(/\s/g,"_")),a},getGlobal:function(){return function(){return this}()},_eval:function(__lvEvalStatement,__lvVarRecorder){return eval(__lvEvalStatement)},runEval:function(a,b,c){"function"==typeof b&&2===arguments.length?(c=b,b={}):b||(b={});var d,e,f=exports,g=b.context||f.getGlobal(),h=b.topLevelVarRecorder;try{a=f.evalCodeTransform(a,b),"undefined"!=typeof $morph&&$morph("log")&&($morph("log").textString=a),d=f._eval.call(g,a,h)}catch(i){e=i}finally{c(e,d)}},syncEval:function(a,b){var c;return exports.runEval(a,b,function(a,b){c=a||b}),c}});
//# sourceMappingURL=lively.vm.min.js.map